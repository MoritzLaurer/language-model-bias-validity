Terminal execution:  True   (sys.argv[0]:  analysis-classical-run.py )
Arguments passed via the terminal:

pimpo    dataset
500    sample_size_train
None    sample_size_corpus
20000    sample_size_no_topic
None    sample_size_test
classical_ml    method
log_reg    model
tfidf    vectorizer
20231026    study_date
pimpo-simple    task
4    n_run
6    n_random_runs_total
random1    group_sample
True    save_outputs
decade    group_column
448    max_length
Iteration number:  3
All random seeds:  [7270  860 5390 5191 5734 6265]
Random seed for this run:  5191
log_reg
Dataset:  pimpo 

Overall label distribution per group member:
 label_text  no_topic  supportive  sceptical  neutral
decade                                              
1990            4432         271        147       72
2000           48640        2864       1114      448
2010           26928        1455        539      258
Group selected: ['2010']  for seed 5191
Sample that might be imbalanced: df_train.label_text.value_counts:
 no_topic      300
neutral        66
sceptical      66
supportive     66
Name: label_text, dtype: int64

FINAL DF_TRAIN SAMPLE (BALANCED) for group \b2010\b:
df_train.label_text.value_counts:
 no_topic      300
neutral        66
sceptical      66
supportive     66
Name: label_text, dtype: int64
Spacy lemmatization done

Train time: 0.0764768123626709 

Aggregate metrics:  {'eval_f1_macro': 0.3554989271028283, 'eval_f1_micro': 0.6554770318021201, 'eval_accuracy_balanced': 0.3745118778828456, 'eval_accuracy_not_b': 0.6554770318021201, 'eval_precision_macro': 0.36580677634220754, 'eval_recall_macro': 0.3745118778828456, 'eval_precision_micro': 0.6554770318021201, 'eval_recall_micro': 0.6554770318021201}
Detailed metrics:  {'neutral': {'precision': 0.06201550387596899, 'recall': 0.20512820512820512, 'f1-score': 0.09523809523809525, 'support': 195}, 'no_topic': {'precision': 0.8435002103491797, 'recall': 0.802, 'f1-score': 0.8222267787574329, 'support': 5000}, 'sceptical': {'precision': 0.16300940438871472, 'recall': 0.2311111111111111, 'f1-score': 0.19117647058823528, 'support': 450}, 'supportive': {'precision': 0.39470198675496687, 'recall': 0.2598081952920663, 'f1-score': 0.31335436382754994, 'support': 1147}, 'accuracy': 0.6554770318021201, 'macro avg': {'precision': 0.36580677634220754, 'recall': 0.3745118778828456, 'f1-score': 0.3554989271028283, 'support': 6792}, 'weighted avg': {'precision': 0.7001872034429595, 'recall': 0.6554770318021201, 'f1-score': 0.6736089795985716, 'support': 6792}} 


Test results:
{'eval_f1_macro': 0.3554989271028283, 'eval_f1_micro': 0.6554770318021201, 'eval_accuracy_balanced': 0.3745118778828456, 'eval_accuracy_not_b': 0.6554770318021201, 'eval_precision_macro': 0.36580677634220754, 'eval_recall_macro': 0.3745118778828456, 'eval_precision_micro': 0.6554770318021201, 'eval_recall_micro': 0.6554770318021201}

Script done.


