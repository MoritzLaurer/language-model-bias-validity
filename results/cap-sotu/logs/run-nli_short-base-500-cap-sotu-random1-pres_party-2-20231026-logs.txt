Terminal execution:  True   (sys.argv[0]:  analysis-transformers-run.py )
Arguments passed via the terminal:

cap-sotu    dataset
500    sample_size_train
None    sample_size_corpus
20000    sample_size_no_topic
None    sample_size_test
nli_short    method
MoritzLaurer/deberta-v3-base-zeroshot-v1    model
transformer    vectorizer
20231026    study_date
cap-sotu    task
2    n_run
6    n_random_runs_total
random1    group_sample
True    save_outputs
pres_party    group_column
448    max_length
Iteration number:  1
All random seeds:  [7270  860 5390 5191 5734 6265]
Random seed for this run:  860
deberta-v3-base-zeroshot-v
Dataset:  cap-sotu 

Overall label distribution per group member:
 pres_party                       
dem         Macroeconomics           1409
            International Affairs    1340
            Defense                  1177
            Health                    577
            Government Operations     449
rep         International Affairs    1190
            Macroeconomics           1178
            Defense                  1121
            Government Operations     439
            Health                    368
Name: label_text, dtype: int64
Group selected: ['rep']  for seed 860
Sample that might be imbalanced: df_train.label_text.value_counts:
 Defense                  100
Government Operations    100
Health                   100
International Affairs    100
Macroeconomics           100
Name: label_text, dtype: int64

FINAL DF_TRAIN SAMPLE (BALANCED) for group \brep\b:
df_train.label_text.value_counts:
 Defense                  100
Government Operations    100
Health                   100
International Affairs    100
Macroeconomics           100
Name: label_text, dtype: int64

For NLI: Augmenting data by adding random not_entail examples to the train set from other classes within the train set.
Length of df_train before this step is: 500.

Max augmentation can be: len(df_train) * 2 = 1000. Can also be lower, if there are more entail examples than not-entail for a majority class
For NLI:  not_entail training examples were added, which leads to an augmented training dataset of length 1000.
Number of hypotheses/classes:  5 

For normal test, N classifications necessary: 2313
For NLI test, N classifications necessary: 11565

Device: cuda
Map:   0%|          | 0/1000 [00:00<?, ? examples/s]                                                    Map:   0%|          | 0/11565 [00:00<?, ? examples/s]Map:  35%|███▍      | 4000/11565 [00:00<00:00, 30226.99 examples/s]Map:  69%|██████▉   | 8000/11565 [00:00<00:00, 30668.40 examples/s]Map: 100%|██████████| 11565/11565 [00:00<00:00, 30762.00 examples/s]                                                                      0%|          | 0/224 [00:00<?, ?it/s]You're using a DebertaV2TokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
  0%|          | 1/224 [00:00<00:25,  8.69it/s]  1%|▏         | 3/224 [00:00<00:21, 10.26it/s]  2%|▏         | 5/224 [00:00<00:21, 10.36it/s]  3%|▎         | 7/224 [00:00<00:19, 10.87it/s]  4%|▍         | 9/224 [00:00<00:19, 11.17it/s]  5%|▍         | 11/224 [00:01<00:18, 11.35it/s]  6%|▌         | 13/224 [00:01<00:18, 11.44it/s]  7%|▋         | 15/224 [00:01<00:18, 11.49it/s]  8%|▊         | 17/224 [00:01<00:17, 11.55it/s]  8%|▊         | 19/224 [00:01<00:17, 11.59it/s]  9%|▉         | 21/224 [00:01<00:17, 11.62it/s] 10%|█         | 23/224 [00:02<00:17, 11.64it/s] 11%|█         | 25/224 [00:02<00:17, 11.65it/s] 12%|█▏        | 27/224 [00:02<00:16, 11.64it/s] 13%|█▎        | 29/224 [00:02<00:16, 11.67it/s] 14%|█▍        | 31/224 [00:02<00:16, 11.68it/s]                                                 14%|█▍        | 32/224 [00:02<00:16, 11.68it/s] 15%|█▍        | 33/224 [00:02<00:16, 11.48it/s] 16%|█▌        | 35/224 [00:03<00:16, 11.53it/s] 17%|█▋        | 37/224 [00:03<00:16, 11.54it/s] 17%|█▋        | 39/224 [00:03<00:15, 11.63it/s] 18%|█▊        | 41/224 [00:03<00:15, 11.64it/s] 19%|█▉        | 43/224 [00:03<00:15, 11.66it/s] 20%|██        | 45/224 [00:03<00:15, 11.67it/s] 21%|██        | 47/224 [00:04<00:15, 11.67it/s] 22%|██▏       | 49/224 [00:04<00:14, 11.67it/s] 23%|██▎       | 51/224 [00:04<00:14, 11.67it/s] 24%|██▎       | 53/224 [00:04<00:14, 11.66it/s] 25%|██▍       | 55/224 [00:04<00:14, 11.66it/s] 25%|██▌       | 57/224 [00:04<00:14, 11.67it/s] 26%|██▋       | 59/224 [00:05<00:14, 11.65it/s] 27%|██▋       | 61/224 [00:05<00:13, 11.71it/s] 28%|██▊       | 63/224 [00:05<00:13, 11.66it/s]                                                 29%|██▊       | 64/224 [00:05<00:13, 11.66it/s] 29%|██▉       | 65/224 [00:05<00:13, 11.72it/s] 30%|██▉       | 67/224 [00:05<00:13, 11.70it/s] 31%|███       | 69/224 [00:05<00:13, 11.69it/s] 32%|███▏      | 71/224 [00:06<00:13, 11.73it/s] 33%|███▎      | 73/224 [00:06<00:12, 11.72it/s] 33%|███▎      | 75/224 [00:06<00:12, 11.71it/s] 34%|███▍      | 77/224 [00:06<00:12, 11.71it/s] 35%|███▌      | 79/224 [00:06<00:12, 11.58it/s] 36%|███▌      | 81/224 [00:07<00:12, 11.62it/s] 37%|███▋      | 83/224 [00:07<00:12, 11.65it/s] 38%|███▊      | 85/224 [00:07<00:11, 11.67it/s] 39%|███▉      | 87/224 [00:07<00:11, 11.69it/s] 40%|███▉      | 89/224 [00:07<00:11, 11.68it/s] 41%|████      | 91/224 [00:07<00:11, 11.66it/s] 42%|████▏     | 93/224 [00:08<00:11, 11.63it/s] 42%|████▏     | 95/224 [00:08<00:11, 11.66it/s]                                                 43%|████▎     | 96/224 [00:08<00:10, 11.66it/s] 43%|████▎     | 97/224 [00:08<00:10, 11.81it/s] 44%|████▍     | 99/224 [00:08<00:10, 11.76it/s] 45%|████▌     | 101/224 [00:08<00:10, 11.79it/s] 46%|████▌     | 103/224 [00:08<00:10, 11.74it/s] 47%|████▋     | 105/224 [00:09<00:10, 11.78it/s] 48%|████▊     | 107/224 [00:09<00:09, 11.72it/s] 49%|████▊     | 109/224 [00:09<00:09, 11.56it/s] 50%|████▉     | 111/224 [00:09<00:09, 11.63it/s] 50%|█████     | 113/224 [00:09<00:09, 11.66it/s] 51%|█████▏    | 115/224 [00:09<00:09, 11.67it/s] 52%|█████▏    | 117/224 [00:10<00:09, 11.67it/s] 53%|█████▎    | 119/224 [00:10<00:09, 11.65it/s] 54%|█████▍    | 121/224 [00:10<00:08, 11.65it/s] 55%|█████▍    | 123/224 [00:10<00:08, 11.65it/s] 56%|█████▌    | 125/224 [00:10<00:08, 11.67it/s] 57%|█████▋    | 127/224 [00:10<00:08, 11.67it/s]                                                  57%|█████▋    | 128/224 [00:11<00:08, 11.67it/s] 58%|█████▊    | 129/224 [00:11<00:08, 11.80it/s] 58%|█████▊    | 131/224 [00:11<00:07, 11.77it/s] 59%|█████▉    | 133/224 [00:11<00:07, 11.73it/s] 60%|██████    | 135/224 [00:11<00:07, 11.76it/s] 61%|██████    | 137/224 [00:11<00:07, 11.79it/s] 62%|██████▏   | 139/224 [00:11<00:07, 11.76it/s] 63%|██████▎   | 141/224 [00:12<00:07, 11.58it/s] 64%|██████▍   | 143/224 [00:12<00:06, 11.58it/s] 65%|██████▍   | 145/224 [00:12<00:06, 11.60it/s] 66%|██████▌   | 147/224 [00:12<00:06, 11.61it/s] 67%|██████▋   | 149/224 [00:12<00:06, 11.64it/s] 67%|██████▋   | 151/224 [00:12<00:06, 11.69it/s] 68%|██████▊   | 153/224 [00:13<00:06, 11.68it/s] 69%|██████▉   | 155/224 [00:13<00:05, 11.67it/s] 70%|███████   | 157/224 [00:13<00:05, 11.72it/s] 71%|███████   | 159/224 [00:13<00:05, 11.71it/s]                                                  71%|███████▏  | 160/224 [00:13<00:05, 11.71it/s] 72%|███████▏  | 161/224 [00:13<00:05, 11.86it/s] 73%|███████▎  | 163/224 [00:14<00:05, 11.81it/s] 74%|███████▎  | 165/224 [00:14<00:05, 11.66it/s] 75%|███████▍  | 167/224 [00:14<00:04, 11.67it/s] 75%|███████▌  | 169/224 [00:14<00:04, 11.69it/s] 76%|███████▋  | 171/224 [00:14<00:04, 11.65it/s] 77%|███████▋  | 173/224 [00:14<00:04, 11.66it/s] 78%|███████▊  | 175/224 [00:15<00:04, 11.67it/s] 79%|███████▉  | 177/224 [00:15<00:04, 11.68it/s] 80%|███████▉  | 179/224 [00:15<00:03, 11.67it/s] 81%|████████  | 181/224 [00:15<00:03, 11.66it/s] 82%|████████▏ | 183/224 [00:15<00:03, 11.65it/s] 83%|████████▎ | 185/224 [00:15<00:03, 11.70it/s] 83%|████████▎ | 187/224 [00:16<00:03, 11.67it/s] 84%|████████▍ | 189/224 [00:16<00:02, 11.68it/s] 85%|████████▌ | 191/224 [00:16<00:02, 11.66it/s]                                                  86%|████████▌ | 192/224 [00:16<00:02, 11.66it/s] 86%|████████▌ | 193/224 [00:16<00:02, 11.73it/s] 87%|████████▋ | 195/224 [00:16<00:02, 11.71it/s] 88%|████████▊ | 197/224 [00:16<00:02, 11.74it/s] 89%|████████▉ | 199/224 [00:17<00:02, 11.56it/s] 90%|████████▉ | 201/224 [00:17<00:01, 11.60it/s] 91%|█████████ | 203/224 [00:17<00:01, 11.62it/s] 92%|█████████▏| 205/224 [00:17<00:01, 11.64it/s] 92%|█████████▏| 207/224 [00:17<00:01, 11.70it/s] 93%|█████████▎| 209/224 [00:17<00:01, 11.70it/s] 94%|█████████▍| 211/224 [00:18<00:01, 11.70it/s] 95%|█████████▌| 213/224 [00:18<00:00, 11.75it/s] 96%|█████████▌| 215/224 [00:18<00:00, 11.73it/s] 97%|█████████▋| 217/224 [00:18<00:00, 11.72it/s] 98%|█████████▊| 219/224 [00:18<00:00, 11.69it/s] 99%|█████████▊| 221/224 [00:18<00:00, 11.69it/s]100%|█████████▉| 223/224 [00:19<00:00, 11.67it/s]                                                 100%|██████████| 224/224 [00:19<00:00, 11.67it/s]                                                 100%|██████████| 224/224 [00:19<00:00, 11.67it/s]100%|██████████| 224/224 [00:19<00:00, 11.64it/s]
{'loss': 0.8304, 'learning_rate': 1.377777777777778e-05, 'epoch': 1.0}
{'loss': 0.3995, 'learning_rate': 1.798882681564246e-05, 'epoch': 2.0}
{'loss': 0.2653, 'learning_rate': 1.4413407821229052e-05, 'epoch': 3.0}
{'loss': 0.2078, 'learning_rate': 1.0837988826815644e-05, 'epoch': 4.0}
{'loss': 0.1229, 'learning_rate': 7.262569832402235e-06, 'epoch': 5.0}
{'loss': 0.0939, 'learning_rate': 3.687150837988827e-06, 'epoch': 6.0}
{'loss': 0.0687, 'learning_rate': 1.11731843575419e-07, 'epoch': 7.0}
{'train_runtime': 19.2391, 'train_samples_per_second': 363.842, 'train_steps_per_second': 11.643, 'train_loss': 0.2840614031468119, 'epoch': 7.0}

Train time: 19.325645685195923 

  0%|          | 0/46 [00:00<?, ?it/s]  4%|▍         | 2/46 [00:00<00:03, 12.50it/s]  9%|▊         | 4/46 [00:00<00:04,  9.93it/s] 13%|█▎        | 6/46 [00:00<00:04,  9.86it/s] 17%|█▋        | 8/46 [00:00<00:03,  9.55it/s] 20%|█▉        | 9/46 [00:00<00:03,  9.44it/s] 22%|██▏       | 10/46 [00:01<00:03,  9.35it/s] 24%|██▍       | 11/46 [00:01<00:03,  9.29it/s] 26%|██▌       | 12/46 [00:01<00:03,  9.07it/s] 28%|██▊       | 13/46 [00:01<00:03,  8.87it/s] 30%|███       | 14/46 [00:01<00:03,  8.72it/s] 33%|███▎      | 15/46 [00:01<00:03,  8.39it/s] 35%|███▍      | 16/46 [00:01<00:04,  7.49it/s] 37%|███▋      | 17/46 [00:01<00:04,  7.01it/s] 39%|███▉      | 18/46 [00:02<00:03,  7.23it/s] 41%|████▏     | 19/46 [00:02<00:03,  7.79it/s] 43%|████▎     | 20/46 [00:02<00:03,  7.43it/s] 46%|████▌     | 21/46 [00:02<00:03,  7.84it/s] 50%|█████     | 23/46 [00:02<00:02,  8.71it/s] 52%|█████▏    | 24/46 [00:02<00:02,  8.78it/s] 54%|█████▍    | 25/46 [00:02<00:02,  8.91it/s] 57%|█████▋    | 26/46 [00:02<00:02,  8.87it/s] 59%|█████▊    | 27/46 [00:03<00:02,  8.89it/s] 61%|██████    | 28/46 [00:03<00:02,  8.31it/s] 63%|██████▎   | 29/46 [00:03<00:01,  8.65it/s] 65%|██████▌   | 30/46 [00:03<00:01,  8.41it/s] 67%|██████▋   | 31/46 [00:03<00:01,  8.67it/s] 70%|██████▉   | 32/46 [00:03<00:01,  8.56it/s] 72%|███████▏  | 33/46 [00:03<00:01,  8.59it/s] 74%|███████▍  | 34/46 [00:03<00:01,  8.49it/s] 76%|███████▌  | 35/46 [00:04<00:01,  8.73it/s] 78%|███████▊  | 36/46 [00:04<00:01,  8.52it/s] 80%|████████  | 37/46 [00:04<00:01,  8.69it/s] 83%|████████▎ | 38/46 [00:04<00:00,  8.99it/s] 85%|████████▍ | 39/46 [00:04<00:00,  9.08it/s] 87%|████████▋ | 40/46 [00:04<00:00,  8.43it/s] 89%|████████▉ | 41/46 [00:04<00:00,  8.70it/s] 91%|█████████▏| 42/46 [00:04<00:00,  8.38it/s] 93%|█████████▎| 43/46 [00:05<00:00,  7.97it/s] 96%|█████████▌| 44/46 [00:05<00:00,  8.37it/s]100%|██████████| 46/46 [00:05<00:00, 10.79it/s]100%|██████████| 46/46 [00:05<00:00,  8.68it/s]
Highest probability prediction per premise:  [0, 2, 0, 3, 3, 3, 4, 3, 0, 4, 1, 3, 0, 3, 4, 2, 4, 0, 4, 4]
Correct labels per premise:  [0, 2, 0, 0, 0, 3, 4, 3, 3, 4, 1, 3, 3, 0, 4, 2, 4, 0, 4, 4]
Aggregate metrics:  {'f1_macro': 0.6855492991380288, 'f1_micro': 0.6977950713359273, 'accuracy_balanced': 0.7094794359474357, 'accuracy_not_b': 0.6977950713359273, 'precision_macro': 0.6741586703833735, 'recall_macro': 0.7094794359474357, 'precision_micro': 0.6977950713359273, 'recall_micro': 0.6977950713359273}
Detailed metrics:  {'Defense': {'precision': 0.7192982456140351, 'recall': 0.5704347826086956, 'f1-score': 0.6362754607177497, 'support': 575}, 'Government Operations': {'precision': 0.5151515151515151, 'recall': 0.6891891891891891, 'f1-score': 0.5895953757225434, 'support': 222}, 'Health': {'precision': 0.6531986531986532, 'recall': 0.8220338983050848, 'f1-score': 0.7279549718574109, 'support': 236}, 'International Affairs': {'precision': 0.7009966777408638, 'recall': 0.6666666666666666, 'f1-score': 0.6834008097165992, 'support': 633}, 'Macroeconomics': {'precision': 0.7821482602118003, 'recall': 0.7990726429675425, 'f1-score': 0.7905198776758409, 'support': 647}, 'accuracy': 0.6977950713359273, 'macro avg': {'precision': 0.6741586703833735, 'recall': 0.7094794359474357, 'f1-score': 0.6855492991380288, 'support': 2313}, 'weighted avg': {'precision': 0.70553213623588, 'recall': 0.6977950713359273, 'f1-score': 0.6971919628570412, 'support': 2313}} 


Test results:
{'eval_loss': 0.7263468503952026, 'eval_f1_macro': 0.6855492991380288, 'eval_f1_micro': 0.6977950713359273, 'eval_accuracy_balanced': 0.7094794359474357, 'eval_accuracy_not_b': 0.6977950713359273, 'eval_precision_macro': 0.6741586703833735, 'eval_recall_macro': 0.7094794359474357, 'eval_precision_micro': 0.6977950713359273, 'eval_recall_micro': 0.6977950713359273, 'eval_runtime': 5.4092, 'eval_samples_per_second': 2138.017, 'eval_steps_per_second': 8.504, 'epoch': 7.0}

Script done.


