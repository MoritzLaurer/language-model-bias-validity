Terminal execution:  True   (sys.argv[0]:  analysis-classical-run.py )
Arguments passed via the terminal:

cap-sotu    dataset
500    sample_size_train
None    sample_size_corpus
20000    sample_size_no_topic
None    sample_size_test
classical_ml    method
log_reg    model
tfidf    vectorizer
20231026    study_date
cap-sotu    task
6    n_run
6    n_random_runs_total
random1    group_sample
True    save_outputs
phase    group_column
448    max_length
Iteration number:  5
All random seeds:  [7270  860 5390 5191 5734 6265]
Random seed for this run:  6265
log_reg
Dataset:  cap-sotu 

Overall label distribution per group member:
 phase                               
cold_war       Defense                  1586
               International Affairs    1583
               Macroeconomics           1571
               Government Operations     611
               Health                    223
post_cold_war  Macroeconomics           1016
               International Affairs     947
               Health                    722
               Defense                   712
               Government Operations     277
Name: label_text, dtype: int64
Group selected: ['post_cold_war']  for seed 6265
Sample that might be imbalanced: df_train.label_text.value_counts:
 Defense                  100
Government Operations    100
Health                   100
International Affairs    100
Macroeconomics           100
Name: label_text, dtype: int64

FINAL DF_TRAIN SAMPLE (BALANCED) for group \bpost_cold_war\b:
df_train.label_text.value_counts:
 Defense                  100
Government Operations    100
Health                   100
International Affairs    100
Macroeconomics           100
Name: label_text, dtype: int64
Spacy lemmatization done

Train time: 0.08336544036865234 

Aggregate metrics:  {'eval_f1_macro': 0.4111028772833677, 'eval_f1_micro': 0.424124513618677, 'eval_accuracy_balanced': 0.4287161652057584, 'eval_accuracy_not_b': 0.42412451361867703, 'eval_precision_macro': 0.4161518643333294, 'eval_recall_macro': 0.4287161652057584, 'eval_precision_micro': 0.42412451361867703, 'eval_recall_micro': 0.42412451361867703}
Detailed metrics:  {'Defense': {'precision': 0.420479302832244, 'recall': 0.3356521739130435, 'f1-score': 0.3733075435203094, 'support': 575}, 'Government Operations': {'precision': 0.19550561797752808, 'recall': 0.3918918918918919, 'f1-score': 0.2608695652173913, 'support': 222}, 'Health': {'precision': 0.38961038961038963, 'recall': 0.5084745762711864, 'f1-score': 0.4411764705882353, 'support': 236}, 'International Affairs': {'precision': 0.45454545454545453, 'recall': 0.4423380726698262, 'f1-score': 0.44835868694955966, 'support': 633}, 'Macroeconomics': {'precision': 0.6206185567010309, 'recall': 0.4652241112828439, 'f1-score': 0.5318021201413428, 'support': 647}, 'accuracy': 0.42412451361867703, 'macro avg': {'precision': 0.4161518643333294, 'recall': 0.4287161652057584, 'f1-score': 0.4111028772833677, 'support': 2313}, 'weighted avg': {'precision': 0.46104339696517216, 'recall': 0.42412451361867703, 'f1-score': 0.4343145476142595, 'support': 2313}} 


Test results:
{'eval_f1_macro': 0.4111028772833677, 'eval_f1_micro': 0.424124513618677, 'eval_accuracy_balanced': 0.4287161652057584, 'eval_accuracy_not_b': 0.42412451361867703, 'eval_precision_macro': 0.4161518643333294, 'eval_recall_macro': 0.4287161652057584, 'eval_precision_micro': 0.42412451361867703, 'eval_recall_micro': 0.42412451361867703}

Script done.


