Terminal execution:  True   (sys.argv[0]:  analysis-classical-run.py )
Arguments passed via the terminal:

cap-sotu    dataset
500    sample_size_train
None    sample_size_corpus
20000    sample_size_no_topic
None    sample_size_test
classical_ml    method
log_reg    model
tfidf    vectorizer
20231026    study_date
cap-sotu    task
6    n_run
6    n_random_runs_total
random1    group_sample
True    save_outputs
pres_party    group_column
448    max_length
Iteration number:  5
All random seeds:  [7270  860 5390 5191 5734 6265]
Random seed for this run:  6265
log_reg
Dataset:  cap-sotu 

Overall label distribution per group member:
 pres_party                       
dem         Macroeconomics           1409
            International Affairs    1340
            Defense                  1177
            Health                    577
            Government Operations     449
rep         International Affairs    1190
            Macroeconomics           1178
            Defense                  1121
            Government Operations     439
            Health                    368
Name: label_text, dtype: int64
Group selected: ['dem']  for seed 6265
Sample that might be imbalanced: df_train.label_text.value_counts:
 Defense                  100
Government Operations    100
Health                   100
International Affairs    100
Macroeconomics           100
Name: label_text, dtype: int64

FINAL DF_TRAIN SAMPLE (BALANCED) for group \bdem\b:
df_train.label_text.value_counts:
 Defense                  100
Government Operations    100
Health                   100
International Affairs    100
Macroeconomics           100
Name: label_text, dtype: int64
Spacy lemmatization done

Train time: 0.0886235237121582 

Aggregate metrics:  {'eval_f1_macro': 0.45694751652714805, 'eval_f1_micro': 0.46822308690012965, 'eval_accuracy_balanced': 0.47576487682027757, 'eval_accuracy_not_b': 0.4682230869001297, 'eval_precision_macro': 0.45623413902583493, 'eval_recall_macro': 0.47576487682027757, 'eval_precision_micro': 0.4682230869001297, 'eval_recall_micro': 0.4682230869001297}
Detailed metrics:  {'Defense': {'precision': 0.48987108655616945, 'recall': 0.46260869565217394, 'f1-score': 0.4758497316636852, 'support': 575}, 'Government Operations': {'precision': 0.29737609329446063, 'recall': 0.4594594594594595, 'f1-score': 0.3610619469026549, 'support': 222}, 'Health': {'precision': 0.3931888544891641, 'recall': 0.538135593220339, 'f1-score': 0.45438282647584977, 'support': 236}, 'International Affairs': {'precision': 0.4449612403100775, 'recall': 0.45339652448657186, 'f1-score': 0.44913928012519555, 'support': 633}, 'Macroeconomics': {'precision': 0.6557734204793029, 'recall': 0.4652241112828439, 'f1-score': 0.5443037974683546, 'support': 647}, 'accuracy': 0.4682230869001297, 'macro avg': {'precision': 0.45623413902583493, 'recall': 0.47576487682027757, 'f1-score': 0.45694751652714805, 'support': 2313}, 'weighted avg': {'precision': 0.4956471272403798, 'recall': 0.4682230869001297, 'f1-score': 0.47448050853808177, 'support': 2313}} 


Test results:
{'eval_f1_macro': 0.45694751652714805, 'eval_f1_micro': 0.46822308690012965, 'eval_accuracy_balanced': 0.47576487682027757, 'eval_accuracy_not_b': 0.4682230869001297, 'eval_precision_macro': 0.45623413902583493, 'eval_recall_macro': 0.47576487682027757, 'eval_precision_micro': 0.4682230869001297, 'eval_recall_micro': 0.4682230869001297}

Script done.


